 imports
from tkinter import *
#import os
from PIL import ImageTk, Image

#Main Screen
homepage = Tk()
homepage.title('Cash for All')

#Functions
def finish_reg():
            name = temp_name.get()
            age = temp_age.get()
            email = temp_email.get()
            password = temp_password.get()
            all_accounts = os.listdir()

            if name == "" or age == "" or email == "" or password == "":
                        notif.config(fg="red",text="*All Fields Required*")
                        return
            print("Registration Completed")

            for email_check in all_accounts:
                        if email == email_check:
                                    notif.config(fg="red",text="*Account already Exists*")
                                    return
                        else:
                                    new_file =  open(email,"w")
                                    new_file.write(name+'\n')
                                    new_file.write(email+'\n')
                                    new_file.write(age+'\n')
                                    new_file.write(password+'\n')
                                    new_file.write('0')
                                    new_file.close()
                                    notif.config(fg="green",text="Account Created")
                                    
def register():
            #Vars
            global temp_name
            global temp_age
            global temp_email
            global temp_password
            global notif
            temp_name = StringVar()
            temp_age = StringVar()
            temp_email = StringVar()
            temp_password = StringVar()
            
            #Register Screen
            register_screen = Toplevel(homepage)
            register_screen.title("Register")

            #Labels
            Label(register_screen, text="Please enter details below", font=('calibri',12)).grid(row=0,sticky=N,pady=10)
            Label(register_screen, text="Name", font=('calibri',8)).grid(row=1,sticky=W)
            Label(register_screen, text="Age", font=('calibri',8)).grid(row=2,sticky=W)
            Label(register_screen, text="Email", font=('calibri',8)).grid(row=3,sticky=W)
            Label(register_screen, text="Password", font=('calibri',8)).grid(row=4,sticky=W)
            notif = Label(register_screen, font=('calibri',12))
            notif.grid(row=6,sticky=N,pady=10)

            #Enteries
            Entry(register_screen,textvariable=temp_name).grid(row=1,column=1)
            Entry(register_screen,textvariable=temp_age).grid(row=2,column=1)
            Entry(register_screen,textvariable=temp_email).grid(row=3,column=1)
            Entry(register_screen,textvariable=temp_password,show="*").grid(row=4,column=1)

            #Buttons
            Button(register_screen, text="Register",command = finish_reg, font=('calibri',10)).grid(row=5,sticky=N,pady=10)
def login_session():
            global login_email
            all_accounts = os.listdir()
            login_email= temp_login_email.get()
            login_password = temp_login_password.get()
            for email in all_accounts:
                        if email == login_email:
                                    file = open(email,'r')
                                    file_data = file.read()
                                    file_data = file_data.split('\n')
                                    Password = file_data[3]
                                    #Account Dashboard
                        if login_password == "password":
                                    login_screen.destroy()
                                    account_dashboard = Toplevel(homepage)
                                    account_dashboard.title('Dashboard')
                                    #Labels
                                    Label(account_dashboard, text="My Dashboard", font=('calibri',10)).grid(row=0,sticky=N,pady=10)
                                    Label(account_dashboard, text="Welcome Back", font=('calibri',10)).grid(row=1,sticky=N,pady=5)
                                    #Buttons
                                    Button(account_dashboard, text="Personal Details", font=('calibri',10),width=30,command=personal_details).grid(row=2,sticky=N,padx=10)
                                    Button(account_dashboard, text="Deposit", font=('calibri',10),width=30,command=deposit).grid(row=3,sticky=N,padx=10)
                                    Button(account_dashboard, text="Withdraw", font=('calibri',10),width=30,command=withdraw).grid(row=4,sticky=N,padx=10)
                                    Label(account_dashboard).grid(row=5,sticky=N,pady=10)
                                    return
                        else:
                                    login_notif.config(fg="red",text="Password Incorrect")
                                    return
                        login_notif.config(fg="red",text="No Account Found")
def deposit():
            print("deposit")
def withdraw():
            print("withdraw")
def personal_details():
            #Vars
            file = open(login_email, 'r')
            file_data = file.read
            user_details = file_data.split('\n')
            details_name = user_details[0]
            details_email = user_details[1]
            details_age = user_details[2]
            details_balance = user_details[4]
            #Personal details screen
            personal_details_screen = Toplevel(homepage)
            personal_details_screen.title('Personal Details')
            #Labels
            Label(personal_details_screen, text="Personal Details", font=('calibri',10)).grid(row=0,sticky=N,pady=10)
            Label(personal_details_screen, text="Name : "+details_name, font=('calibri',10)).grid(row=1,sticky=W)
            Label(personal_details_screen, text="Email : "+details_email, font=('calibri',10)).grid(row=2,sticky=W)
            Label(personal_details_screen, text="Age : "+details_age, font=('calibri',10)).grid(row=3,sticky=W)
            Label(personal_details_screen, text="Balance :Â£"+details_balance, font=('calibri',10)).grid(row=4,sticky=W)
            
            
def login():
            #Vars
            global temp_login_email
            global temp_login_password
            global login_notif
            global login_screen
            temp_login_email = StringVar()
            temp_login_password = StringVar()
            #Login Screen
            login_screen = Toplevel(homepage)
            login_screen.title('Login')
            #Labels
            Label(login_screen, text="Login to your account", font=('calibri',12)).grid(row=0,sticky=N,pady=10)
            Label(login_screen, text="Email", font=('calibri',8)).grid(row=1,sticky=W)
            Label(login_screen, text="Password", font=('calibri',8)).grid(row=2,sticky=W)
            login_notif = Label(login_screen, font=('calibri',12))
            login_notif.grid(row=4,sticky=N)
            #Entry
            Entry(login_screen,textvariable=temp_login_email).grid(row=1,column=1,padx=5)
            Entry(login_screen,textvariable=temp_login_password,show="*").grid(row=2,column=1,padx=5)
            #Buttons
            Button(login_screen, text="Login", command=login_session,width=15,font=('calibri',10)).grid(row=3,sticky=W,pady=5,padx=5)

#Labels
Label(homepage, text = "Custom Banking", font = ('calibri',14)).grid(row=0,sticky=N,pady=10)
Label(homepage, text = "Banking For the Future", font = ('calibri',10)).grid(row=1,sticky=N)

#Buttons
Button(homepage, text = "Register", font = ('calibri',8), width=20,command=register).grid(row=3,sticky=N)
Button(homepage, text = "Login", font = ('calibri',8), width=20,command=login).grid(row=4,sticky=N,pady=5)

homepage.mainloop()
